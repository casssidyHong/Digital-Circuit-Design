$date
	Sat May  7 22:48:33 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_Lab2_4_bit_sub $end
$var wire 1 ! bout $end
$var wire 4 " D [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % bin $end
$scope module M $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % bin $end
$var reg 4 ( C [3:0] $end
$var reg 4 ) D [3:0] $end
$var reg 4 * G [3:0] $end
$var reg 4 + P [3:0] $end
$var reg 4 , Q [3:0] $end
$var reg 1 ! bout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 ,
b1100 +
b1 *
bx )
b111 (
b1100 '
b0 &
1%
b1100 $
b0 #
bx "
0!
$end
#100
b11 (
b100 "
b100 )
b1100 ,
b11 +
b10 $
b10 '
b1 #
b1 &
#200
b111 (
b110 "
b110 )
b1010 ,
b101 +
b110 $
b110 '
b11 #
b11 &
#300
b10 (
b1001 "
b1001 )
b1 ,
b1110 +
0%
b1011 $
b1011 '
b101 #
b101 &
#400
b111 (
b1111 "
b1111 )
b10 ,
b1101 +
1%
b1010 $
b1010 '
b111 #
b111 &
#500
b1110 (
b1110 "
b1110 )
b110 ,
b1001 +
0%
b1 $
b1 '
b1000 #
b1000 &
#600
b110 (
b11 "
b11 )
b10 ,
b1101 +
b110 $
b110 '
b1011 #
b1011 &
#700
1!
b1111 (
b110 "
b110 )
b1111 ,
b0 +
b0 *
1%
b1111 $
b1111 '
b1111 #
b1111 &
#800
